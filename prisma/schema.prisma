// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  photo     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  vehicles Vehicle[]
}

model Vehicle {
  id          String   @id @default(uuid())
  userId      String
  photo       String?
  brand       String
  model       String
  plateNumber String   @unique
  year        Int
  currentKm   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user     User             @relation(fields: [userId], references: [id])
  services ServiceRecord[]
  reminder ReminderSetting?
}

model ServiceRecord {
  id          String   @id @default(uuid())
  vehicleId   String
  serviceDate DateTime
  odometerKm  Int
  workshop    String
  serviceType String
  cost        Int
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  vehicle Vehicle @relation(fields: [vehicleId], references: [id])
}

model ReminderSetting {
  id              String    @id @default(uuid())
  vehicleId       String    @unique
  type            String // "km" or "time"
  thresholdKm     Int?
  thresholdDays   Int?
  lastServiceDate DateTime?
  lastServiceKm   Int?
  nextDueKm       Int?

  vehicle Vehicle @relation(fields: [vehicleId], references: [id])
}
